  0%|                                                                                                                                                                                                                                                             | 0/118 [00:00<?, ?it/s]
> /home/bscho/works/multi-tta/models/baseline.py(63)forward()
-> pred['logits'] = self.fc(adaptive_avg_pool2d(pred['last_hidden_state'], (1,1)).squeeze())
{'last_hidden_state': tensor([[[ 5.6369e+00, -3.2311e+00, -4.4865e-01,  ...,  1.7768e+00,
          -1.7272e+00, -1.0813e+00],
         [ 5.1022e+00, -2.8200e+00, -1.6513e+00,  ...,  1.7445e+00,
          -1.6357e+00, -1.9369e+00],
         [ 4.9677e+00, -4.7794e+00, -1.0328e-01,  ...,  2.5068e+00,
          -1.7737e+00, -9.8628e-01],
         ...,
         [ 5.3816e+00, -2.6976e+00,  5.0618e-01,  ...,  2.6410e+00,
          -2.1389e+00, -1.0617e+00],
         [ 5.3752e+00, -2.5360e+00,  5.4148e-01,  ...,  2.1819e+00,
          -2.1616e+00, -7.0785e-01],
         [ 5.4933e+00, -2.3352e+00,  9.3700e-01,  ...,  2.0150e+00,
          -2.0044e+00, -1.4585e-01]],

        [[-1.5196e+00,  4.7003e-01, -1.3410e-01,  ..., -2.4706e+00,
           1.8794e-01, -4.9006e-01],
         [-1.3561e+00,  5.0220e-01, -6.4341e-01,  ..., -2.3731e+00,
           1.5719e-01, -4.9973e-01],
         [-1.6712e+00,  7.1600e-01,  9.3727e-02,  ..., -2.0660e+00,
           1.7975e-01, -6.9304e-01],
         ...,
         [-5.3321e-01,  1.2513e+00,  8.8354e-01,  ..., -8.1772e-01,
          -1.8964e+00, -5.5276e-02],
         [-1.1332e+00,  1.0561e+00,  1.0859e+00,  ...,  3.1037e-01,
          -9.7988e-01,  1.3657e+00],
         [ 6.3210e-01,  1.5838e+00,  2.1705e+00,  ...,  8.7232e-02,
          -2.4628e+00, -4.1141e-02]],

        [[-1.3660e-02, -1.4889e-01, -1.2623e+00,  ...,  1.3807e+00,
          -3.3847e-01,  9.1512e-01],
         [ 1.8530e+00,  1.6199e+00, -2.2126e+00,  ..., -3.5130e+00,
           1.6949e+00,  9.1402e-01],
         [ 2.7240e+00,  5.9205e-01, -1.7610e+00,  ..., -2.5366e+00,
          -1.0968e+00, -8.3009e-01],
         ...,
         [ 1.3263e-01,  1.4858e+00,  2.0641e+00,  ...,  5.0521e-01,
          -3.6838e-01,  1.5293e+00],
         [ 4.4916e+00, -9.3695e-01, -4.7398e-01,  ..., -3.3142e+00,
           1.4589e+00,  2.6582e-01],
         [ 2.7185e+00, -1.0969e+00, -1.9637e+00,  ..., -2.4580e+00,
          -1.2457e-03,  4.7002e-01]],

        ...,

        [[ 4.0151e+00, -3.1743e+00, -3.6718e+00,  ..., -1.6528e+00,
           6.7687e-01, -1.3479e+00],
         [ 2.2594e+00, -2.7817e+00, -2.4447e+00,  ..., -1.2765e+00,
           1.2125e+00,  5.9038e-01],
         [ 3.6706e+00, -2.9496e+00, -3.3117e+00,  ..., -3.6046e+00,
          -7.7961e-01, -1.0715e+00],
         ...,
         [ 2.6621e+00, -4.3664e+00, -1.2260e+00,  ..., -1.9766e+00,
           5.7851e-01, -1.2410e+00],
         [ 1.5069e+00, -6.9417e-01, -2.2442e+00,  ...,  3.3282e-02,
           4.5462e-01, -9.1207e-01],
         [ 2.8729e+00, -2.7224e+00, -4.5278e-01,  ..., -3.3101e+00,
          -1.1429e+00, -2.3384e+00]],

        [[ 4.0071e+00, -2.3184e+00,  1.5713e+00,  ...,  2.3020e+00,
           1.6713e-01, -2.6288e+00],
         [ 4.3429e+00, -1.7752e+00,  2.5499e+00,  ...,  2.1168e+00,
          -1.7342e-01, -2.6129e+00],
         [ 6.3089e-01, -6.2571e-01, -1.7626e-01,  ...,  7.5650e-01,
           1.6818e+00, -9.2535e-01],
         ...,
         [ 2.2502e+00, -1.1778e+00, -1.3193e+00,  ...,  3.3283e+00,
           8.1229e-01, -2.8385e-01],
         [ 4.4484e+00, -2.0546e+00,  7.0519e-01,  ...,  2.6497e+00,
          -5.2096e-02, -1.3120e+00],
         [ 1.3123e+00, -1.8200e+00,  1.1902e+00,  ...,  3.5411e+00,
          -2.1228e-01,  1.9645e+00]],

        [[-6.2493e-01,  2.1441e+00,  1.2304e+00,  ...,  5.5217e-01,
          -2.2609e+00,  4.3666e-01],
         [-6.8237e-01,  3.7198e+00,  1.3780e+00,  ..., -1.1665e-02,
          -2.3017e+00,  1.4542e+00],
         [-6.4018e-02,  3.3781e+00,  8.0575e-01,  ...,  1.5809e-01,
          -1.5143e+00,  7.6964e-01],
         ...,
         [-3.1361e+00,  4.2414e+00,  8.1289e-01,  ..., -1.0235e+00,
           2.3655e-01,  1.5147e-01],
         [-8.9343e-01,  5.8563e+00, -2.1883e-01,  ...,  6.7479e-01,
          -5.0807e-01, -1.2527e+00],
         [-3.4399e+00,  3.0586e+00,  9.4678e-01,  ...,  3.0170e+00,
          -8.4274e-01,  1.5062e+00]]], device='cuda:0',
       grad_fn=<NativeLayerNormBackward0>)}
*** TypeError: adaptive_avg_pool2d() missing 1 required positional argument: 'output_size'
tensor([[[-0.0280]],

        [[-0.0148]],

        [[-0.0449]],

        [[-0.0295]],

        [[-0.0186]],

        [[-0.0134]],

        [[-0.0288]],

        [[-0.0241]],

        [[-0.0106]],

        [[-0.0349]],

        [[-0.0374]],

        [[-0.0279]],

        [[-0.0305]],

        [[-0.0203]],

        [[-0.0311]],

        [[-0.0237]],

        [[-0.0428]],

        [[-0.0281]],

        [[-0.0162]],

        [[-0.0301]],

        [[-0.0309]],

        [[-0.0112]],

        [[-0.0299]],

        [[-0.0262]],

        [[-0.0342]],

        [[-0.0400]],

        [[-0.0429]],

        [[-0.0433]],

        [[-0.0267]],

        [[-0.0196]],

        [[-0.0049]],

        [[-0.0185]],

        [[-0.0359]],

        [[-0.0474]],

        [[-0.0453]],

        [[-0.0027]],

        [[-0.0421]],

        [[-0.0301]],

        [[-0.0402]],

        [[-0.0240]],

        [[-0.0496]],

        [[-0.0342]],

        [[-0.0375]],

        [[-0.0413]],

        [[-0.0367]],

        [[-0.0294]],

        [[-0.0276]],

        [[-0.0218]],

        [[ 0.0284]],

        [[-0.0288]],

        [[-0.0253]],

        [[-0.0424]],

        [[-0.0191]],

        [[-0.0271]],

        [[-0.0444]],

        [[-0.0112]],

        [[-0.0151]],

        [[-0.0129]],

        [[-0.0439]],

        [[-0.0171]],

        [[-0.0514]],

        [[-0.0528]],

        [[-0.0312]],

        [[-0.0481]]], device='cuda:0', grad_fn=<MeanBackward1>)
torch.Size([64, 1, 1])
torch.Size([64, 196, 768])
Traceback (most recent call last):
  File "/home/bscho/works/multi-tta/main.py", line 34, in <module>
    main()
  File "/home/bscho/works/multi-tta/main.py", line 24, in main
    trainer.train()
  File "/home/bscho/works/multi-tta/trainers/base_trainer.py", line 48, in train
    model = self.train_step(model, dataloader, optimizer)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bscho/works/multi-tta/trainers/tent_trainer.py", line 30, in train_step
    pred = model(samples)
           ^^^^^^^^^^^^^^
  File "/home/bscho/anaconda3/envs/multiTTA/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bscho/anaconda3/envs/multiTTA/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bscho/works/multi-tta/models/baseline.py", line 63, in forward
    pred['logits'] = self.fc(adaptive_avg_pool2d(pred['last_hidden_state'], (1,1)).squeeze())
                     ^^^^
  File "/home/bscho/anaconda3/envs/multiTTA/lib/python3.12/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bscho/anaconda3/envs/multiTTA/lib/python3.12/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
                      ^^^^^^^^^^^^^
bdb.BdbQuit
